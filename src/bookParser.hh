/* docbookParser.hh
 * ver 1.00
 * Computer generated
 * 2-8-2010
 */

#ifndef guarddocbookParser
#define guarddocbookParser

#include <stdexcept>
#include "booktok.hh"

/** Thrown when a parsing error is detected. */
class docbookParseError : public std::runtime_error {
public:
	explicit docbookParseError( const std::string& name )
	  : std::runtime_error(name) {}
};

// forward declaration
class docbook;

class docbookParser {
	docbookToken current;
	docbookScanner *scanner;
	docbook *builder;

	void error();
	void pass( docbookToken t );

public:
	docbookParser( docbookScanner& s, docbook& b );

	void lltitle();
	void llinlinemediaobject();
	void llremark();
	void llsuperscript();
	void llsubscript();
	void llxref();
	void lllink();
	void llolink();
	void llanchor();
	void llbiblioref();
	void llalt();
	void llannotation();
	void llindexterm();
	void llabbrev();
	void llacronym();
	void lldate();
	void llemphasis();
	void llfootnote();
	void llfootnoteref();
	void llforeignphrase();
	void llphrase();
	void llquote();
	void llwordasword();
	void llfirstterm();
	void llglossterm();
	void llcoref();
	void lltrademark();
	void llproductnumber();
	void llproductname();
	void lldatabase();
	void llapplication();
	void llhardware();
	void llcitation();
	void llciterefentry();
	void llcitetitle();
	void llcitebiblioid();
	void llauthor();
	void llperson();
	void llpersonname();
	void llorg();
	void llorgname();
	void lleditor();
	void lljobtitle();
	void llreplaceable();
	void llpackage();
	void llparameter();
	void lltermdef();
	void llnonterminal();
	void llsystemitem();
	void lloption();
	void lloptional();
	void llproperty();
	void llinlineequation();
	void lltag();
	void llmarkup();
	void lltoken();
	void llsymbol();
	void llliteral();
	void llcode();
	void llconstant();
	void llemail();
	void lluri();
	void llguiicon();
	void llguibutton();
	void llguimenuitem();
	void llguimenu();
	void llguisubmenu();
	void llguilabel();
	void llmenuchoice();
	void llmousebutton();
	void llkeycombo();
	void llkeycap();
	void llkeycode();
	void llkeysym();
	void llshortcut();
	void llaccel();
	void llprompt();
	void llenvar();
	void llfilename();
	void llcommand();
	void llcomputeroutput();
	void lluserinput();
	void llfunction();
	void llvarname();
	void llreturnvalue();
	void lltype();
	void llclassname();
	void llexceptionname();
	void llinterfacename();
	void llmethodname();
	void llmodifier();
	void llinitializer();
	void llooclass();
	void llooexception();
	void lloointerface();
	void llerrorcode();
	void llerrortext();
	void llerrorname();
	void llerrortype();
	void lltitleabbrev();
	void llsubtitle();
	void llinfo();
	void llabstract();
	void lladdress();
	void llartpagenums();
	void llauthorgroup();
	void llauthorinitials();
	void llbibliocoverage();
	void llbiblioid();
	void llbibliosource();
	void llcollab();
	void llconfgroup();
	void llcontractsponsor();
	void llcontractnum();
	void llcopyright();
	void llcover();
	void lledition();
	void llissuenum();
	void llkeywordset();
	void lllegalnotice();
	void llmediaobject();
	void llothercredit();
	void llpagenums();
	void llprinthistory();
	void llpubdate();
	void llpublisher();
	void llpublishername();
	void llreleaseinfo();
	void llrevhistory();
	void llseriesvolnums();
	void llsubjectset();
	void llvolumenum();
	void llextendedlink();
	void llbibliomisc();
	void llbibliomset();
	void llbibliorelation();
	void llbiblioset();
	void llitermset();
	void llsubject();
	void llsubjectterm();
	void llkeyword();
	void llprocedure();
	void llitemizedlist();
	void llorderedlist();
	void llsimplelist();
	void llvariablelist();
	void llsegmentedlist();
	void llglosslist();
	void llbibliolist();
	void llcalloutlist();
	void llqandaset();
	void llexample();
	void llfigure();
	void lltable();
	void llequation();
	void llinformalexample();
	void llinformalfigure();
	void llinformaltable();
	void llinformalequation();
	void llsidebar();
	void llblockquote();
	void llepigraph();
	void llscreenshot();
	void lltask();
	void llproductionset();
	void llconstraintdef();
	void llmsgset();
	void llscreen();
	void llliterallayout();
	void llprogramlistingco();
	void llscreenco();
	void llprogramlisting();
	void llsynopsis();
	void llbridgehead();
	void llfuncsynopsis();
	void llclasssynopsis();
	void llmethodsynopsis();
	void llconstructorsynopsis();
	void lldestructorsynopsis();
	void llfieldsynopsis();
	void llcmdsynopsis();
	void llcaution();
	void llimportant();
	void llnote();
	void lltip();
	void llwarning();
	void llpara();
	void llformalpara();
	void llsimpara();
	void llstep();
	void llsubsteps();
	void llstepalternatives();
	void llpersonblurb();
	void llattribution();
	void lllistitem();
	void llsegtitle();
	void llseglistitem();
	void llseg();
	void llmember();
	void llvarlistentry();
	void llterm();
	void llcaption();
	void lltextobject();
	void lllineannotation();
	void llco();
	void llvideoobject();
	void llaudioobject();
	void llimageobject();
	void llimageobjectco();
	void llvideodata();
	void llaudiodata();
	void llimagedata();
	void lltextdata();
	void llpob();
	void llstreet();
	void llcity();
	void llstate();
	void llpostcode();
	void llcountry();
	void llphone();
	void llfax();
	void llotheraddr();
	void llaffiliation();
	void llshortaffil();
	void llorgdiv();
	void llhonorific();
	void llfirstname();
	void llsurname();
	void lllineage();
	void llothername();
	void llcontrib();
	void llconfdates();
	void llconftitle();
	void llconfnum();
	void llconfsponsor();
	void llyear();
	void llholder();
	void llrevision();
	void llrevnumber();
	void llrevremark();
	void llrevdescription();
	void llrefentrytitle();
	void llmanvolnum();
	void llset();
	void lltoc();
	void llbook();
	void llsetindex();
	void llglossary();
	void llbibliography();
	void llindex();
	void lldedication();
	void llacknowledgements();
	void llpreface();
	void llchapter();
	void llappendix();
	void llarticle();
	void llcolophon();
	void llpart();
	void llreference();
	void llsection();
	void llsimplesect();
	void llsect1();
	void llrefentry();
	void llpartintro();
	void lllocator();
	void llarc();
	void llsect2();
	void llsect3();
	void llsect4();
	void llsect5();
	void llrefmeta();
	void llrefnamediv();
	void llrefsynopsisdiv();
	void llrefsection();
	void llrefsect1();
	void llrefmiscinfo();
	void llrefdescriptor();
	void llrefname();
	void llrefpurpose();
	void llrefclass();
	void llrefsect2();
	void llrefsect3();
	void llglossentry();
	void llglosssee();
	void llglossdef();
	void llglossseealso();
	void llglossdiv();
	void llbiblioentry();
	void llbibliomixed();
	void llbibliodiv();
	void llprimary();
	void llsecondary();
	void lltertiary();
	void llsee();
	void llseealso();
	void llindexdiv();
	void llindexentry();
	void llprimaryie();
	void llseeie();
	void llseealsoie();
	void llsecondaryie();
	void lltertiaryie();
	void lltocdiv();
	void lltocentry();
	void lltasksummary();
	void lltaskprerequisites();
	void lltaskrelated();
	void llcallout();
	void llareaspec();
	void llarea();
	void llareaset();
	void llproduction();
	void llproductionrecap();
	void lllhs();
	void llrhs();
	void llconstraint();
	void llsbr();
	void lltgroup();
	void llcolspec();
	void llspanspec();
	void llthead();
	void lltfoot();
	void lltbody();
	void llrow();
	void lltr();
	void llentry();
	void llentrytbl();
	void llcol();
	void llcolgroup();
	void llth();
	void lltd();
	void llmsgentry();
	void llsimplemsgentry();
	void llmsg();
	void llmsginfo();
	void llmsgexplan();
	void llmsgtext();
	void llmsgmain();
	void llmsgsub();
	void llmsgrel();
	void llmsglevel();
	void llmsgorig();
	void llmsgaud();
	void llqandadiv();
	void llqandaentry();
	void llquestion();
	void llanswer();
	void lllabel();
	void llmathphrase();
	void llarg();
	void llgroup();
	void llsynopfragment();
	void llsynopfragmentref();
	void llfuncsynopsisinfo();
	void llfuncprototype();
	void llfuncdef();
	void llvoid();
	void llvarargs();
	void llparamdef();
	void llfuncparams();
	void llclasssynopsisinfo();
	void llmethodparam();
};

#endif
